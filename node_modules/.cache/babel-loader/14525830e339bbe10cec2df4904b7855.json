{"ast":null,"code":"import { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\n\n// @ts-ignore\nlet dracoLoader = null;\nlet decoderPath = 'https://www.gstatic.com/draco/versioned/decoders/1.5.5/';\nfunction extensions(useDraco, useMeshopt, extendLoader) {\n  return loader => {\n    if (extendLoader) {\n      extendLoader(loader);\n    }\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : decoderPath);\n      loader.setDRACOLoader(dracoLoader);\n    }\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\n    }\n  };\n}\nfunction useGLTF(path) {\n  let useDraco = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let useMeshOpt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let extendLoader = arguments.length > 3 ? arguments[3] : undefined;\n  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n  return gltf;\n}\nuseGLTF.preload = function (path) {\n  let useDraco = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let useMeshOpt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let extendLoader = arguments.length > 3 ? arguments[3] : undefined;\n  return useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n};\nuseGLTF.clear = input => useLoader.clear(GLTFLoader, input);\nuseGLTF.setDecoderPath = path => {\n  decoderPath = path;\n};\nexport { useGLTF };","map":{"version":3,"names":["GLTFLoader","DRACOLoader","MeshoptDecoder","useLoader","dracoLoader","decoderPath","extensions","useDraco","useMeshopt","extendLoader","loader","setDecoderPath","setDRACOLoader","setMeshoptDecoder","useGLTF","path","useMeshOpt","gltf","preload","clear","input"],"sources":["/Users/caleb/Desktop/soccer-teams/node_modules/@react-three/drei/core/useGLTF.js"],"sourcesContent":["import { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\n\n// @ts-ignore\nlet dracoLoader = null;\nlet decoderPath = 'https://www.gstatic.com/draco/versioned/decoders/1.5.5/';\nfunction extensions(useDraco, useMeshopt, extendLoader) {\n  return loader => {\n    if (extendLoader) {\n      extendLoader(loader);\n    }\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : decoderPath);\n      loader.setDRACOLoader(dracoLoader);\n    }\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\n    }\n  };\n}\nfunction useGLTF(path, useDraco = true, useMeshOpt = true, extendLoader) {\n  const gltf = useLoader(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\n  return gltf;\n}\nuseGLTF.preload = (path, useDraco = true, useMeshOpt = true, extendLoader) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshOpt, extendLoader));\nuseGLTF.clear = input => useLoader.clear(GLTFLoader, input);\nuseGLTF.setDecoderPath = path => {\n  decoderPath = path;\n};\n\nexport { useGLTF };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,WAAW,EAAEC,cAAc,QAAQ,cAAc;AACtE,SAASC,SAAS,QAAQ,oBAAoB;;AAE9C;AACA,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,WAAW,GAAG,yDAAyD;AAC3E,SAASC,UAAU,CAACC,QAAQ,EAAEC,UAAU,EAAEC,YAAY,EAAE;EACtD,OAAOC,MAAM,IAAI;IACf,IAAID,YAAY,EAAE;MAChBA,YAAY,CAACC,MAAM,CAAC;IACtB;IACA,IAAIH,QAAQ,EAAE;MACZ,IAAI,CAACH,WAAW,EAAE;QAChBA,WAAW,GAAG,IAAIH,WAAW,EAAE;MACjC;MACAG,WAAW,CAACO,cAAc,CAAC,OAAOJ,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGF,WAAW,CAAC;MACjFK,MAAM,CAACE,cAAc,CAACR,WAAW,CAAC;IACpC;IACA,IAAII,UAAU,EAAE;MACdE,MAAM,CAACG,iBAAiB,CAAC,OAAOX,cAAc,KAAK,UAAU,GAAGA,cAAc,EAAE,GAAGA,cAAc,CAAC;IACpG;EACF,CAAC;AACH;AACA,SAASY,OAAO,CAACC,IAAI,EAAoD;EAAA,IAAlDR,QAAQ,uEAAG,IAAI;EAAA,IAAES,UAAU,uEAAG,IAAI;EAAA,IAAEP,YAAY;EACrE,MAAMQ,IAAI,GAAGd,SAAS,CAACH,UAAU,EAAEe,IAAI,EAAET,UAAU,CAACC,QAAQ,EAAES,UAAU,EAAEP,YAAY,CAAC,CAAC;EACxF,OAAOQ,IAAI;AACb;AACAH,OAAO,CAACI,OAAO,GAAG,UAACH,IAAI;EAAA,IAAER,QAAQ,uEAAG,IAAI;EAAA,IAAES,UAAU,uEAAG,IAAI;EAAA,IAAEP,YAAY;EAAA,OAAKN,SAAS,CAACe,OAAO,CAAClB,UAAU,EAAEe,IAAI,EAAET,UAAU,CAACC,QAAQ,EAAES,UAAU,EAAEP,YAAY,CAAC,CAAC;AAAA;AACjKK,OAAO,CAACK,KAAK,GAAGC,KAAK,IAAIjB,SAAS,CAACgB,KAAK,CAACnB,UAAU,EAAEoB,KAAK,CAAC;AAC3DN,OAAO,CAACH,cAAc,GAAGI,IAAI,IAAI;EAC/BV,WAAW,GAAGU,IAAI;AACpB,CAAC;AAED,SAASD,OAAO"},"metadata":{},"sourceType":"module"}