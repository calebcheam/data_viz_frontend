{"ast":null,"code":"var _jsxFileName = \"/Users/caleb/Desktop/soccer-teams/src/ComparisonChart.js\";\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList } from 'recharts';\nconst calculateAverageRating = players => {\n  const totalRating = players.reduce((acc, player) => acc + player.average_rating, 0);\n  return players.length ? +(totalRating / players.length).toFixed(1) : 0;\n};\nconst CustomTooltip = _ref => {\n  let {\n    active,\n    payload,\n    label\n  } = _ref;\n  if (active && payload && payload.length) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"custom-tooltip\",\n      style: {\n        backgroundColor: '#fff',\n        padding: '10px',\n        border: '1px solid #ccc'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, `${label} Ratings:`), payload.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      style: {\n        color: item.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, `${item.name}: ${item.value}`)));\n  }\n  return null;\n};\nconst ComparisonChart = _ref2 => {\n  let {\n    teams\n  } = _ref2;\n  const categories = ['Attack', 'Midfield', 'Defense'];\n  const data = categories.map(category => {\n    const categoryData = {\n      name: category\n    };\n    teams.forEach(team => {\n      let players;\n      if (category === 'Attack') {\n        players = team.players.filter(player => player.broad_position === 'Attacker');\n      } else if (category === 'Midfield') {\n        players = team.players.filter(player => player.broad_position === 'Midfielder');\n      } else {\n        players = team.players.filter(player => player.broad_position === 'Defender' || player.broad_position === 'Goalkeeper');\n      }\n      categoryData[team.name] = calculateAverageRating(players);\n    });\n    return categoryData;\n  });\n  const colors = ['#8884d8', '#82ca9d'];\n  return /*#__PURE__*/React.createElement(BarChart, {\n    width: 600,\n    height: 300,\n    data: data,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    content: /*#__PURE__*/React.createElement(CustomTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), teams.map((team, index) => /*#__PURE__*/React.createElement(Bar, {\n    key: team.name,\n    dataKey: team.name,\n    fill: colors[index],\n    barSize: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LabelList, {\n    dataKey: team.name,\n    position: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default ComparisonChart;","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","LabelList","calculateAverageRating","players","totalRating","reduce","acc","player","average_rating","length","toFixed","CustomTooltip","active","payload","label","backgroundColor","padding","border","map","item","index","color","name","value","ComparisonChart","teams","categories","data","category","categoryData","forEach","team","filter","broad_position","colors","top","right","left","bottom"],"sources":["/Users/caleb/Desktop/soccer-teams/src/ComparisonChart.js"],"sourcesContent":["import React from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList\n} from 'recharts';\n\nconst calculateAverageRating = (players) => {\n  const totalRating = players.reduce((acc, player) => acc + player.average_rating, 0);\n  return players.length ? +((totalRating / players.length).toFixed(1)) : 0;\n};\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  if (active && payload && payload.length) {\n    return (\n      <div className=\"custom-tooltip\" style={{ backgroundColor: '#fff', padding: '10px', border: '1px solid #ccc' }}>\n        <p>{`${label} Ratings:`}</p>\n        {payload.map((item, index) => (\n          <p key={index} style={{ color: item.color }}>\n            {`${item.name}: ${item.value}`}\n          </p>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\nconst ComparisonChart = ({ teams }) => {\n  const categories = ['Attack', 'Midfield', 'Defense'];\n  const data = categories.map(category => {\n    const categoryData = {\n      name: category,\n    };\n\n    teams.forEach(team => {\n      let players;\n      if (category === 'Attack') {\n        players = team.players.filter(player => player.broad_position === 'Attacker');\n      } else if (category === 'Midfield') {\n        players = team.players.filter(player => player.broad_position === 'Midfielder');\n      } else {\n        players = team.players.filter(player => player.broad_position === 'Defender' || player.broad_position === 'Goalkeeper');\n      }\n\n      categoryData[team.name] = calculateAverageRating(players);\n    });\n\n    return categoryData;\n  });\n\n  const colors = ['#8884d8', '#82ca9d'];\n\n  return (\n    <BarChart\n      width={600}\n      height={300}\n      data={data}\n      margin={{\n        top: 20, right: 30, left: 20, bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip content={<CustomTooltip />} />\n      <Legend />\n      {teams.map((team, index) => (\n        <Bar key={team.name} dataKey={team.name} fill={colors[index]} barSize={20}>\n          <LabelList dataKey={team.name} position=\"top\" />\n        </Bar>\n      ))}\n    </BarChart>\n  );\n};\n\nexport default ComparisonChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}